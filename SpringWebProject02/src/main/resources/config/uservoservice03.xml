<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:util="http://www.springframework.org/schema/util"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
												 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd

							http://www.springframework.org/schema/context 
												 http://www.springframework.org/schema/context/spring-context-3.0.xsd
												 
							http://www.springframework.org/schema/util 
												 http://www.springframework.org/schema/util/spring-util-3.0.xsd												 
							">

	<!-- 1번째 방식: context:property-placeholder를 이용한 PropertyPlaceholderConfigurer를 동적으로 생성 -->												 
	<context:property-placeholder location="classpath:config/uservoservice02.properties"/>
	<bean id="userVO04" class="com.junhojohn.core.models.UserVO">
		<property name="id" value="${user.userId}"/>
		<property name="pwd" value="${user.password}"/>
		<property name="addr" value="${user.addr}"/>
	</bean>
	
	<!-- 2번째 방식: springframework-util 3.2.9 를 이용한  SpEL 사용하여  properties 파일 내용 등록 -->
	<util:properties id="userProperties" location="classpath:config/uservoservice03.properties"/>
	<bean id="userVO05" class="com.junhojohn.core.models.UserVO">
		<property name="id" value="#{ userProperties['user.userId'] }"/>
		<property name="pwd" value="#{ userProperties['user.password'] }"/>
		<property name="addr" value="#{ userProperties['user.addr'] }"/>
	</bean>
	
	<!-- SpEL 예제1 -->
	<bean id="userVO06" class="com.junhojohn.core.models.UserVO">
		<property name="id" value="james007"/>
		<property name="pwd" value="6666"/>
		<property name="addr" value="London"/>
	</bean>
	<!-- SpEL 예제1. 앞서 정의된 userVO06을 참조하여 구성하는 방법 -->
	<bean id="userVO07" class="com.junhojohn.core.models.UserVO">
		<property name="id" value="#{ userVO06.id }"/>
		<property name="pwd" value="#{ userVO06.pwd }"/>
		<property name="addr" value="#{ userVO06.addr }"/>
	</bean>
	
	<!-- SpEL 예제2 -->
	<bean id="client" class="com.junhojohn.core.models.Client"/>
	<bean id="userVO08" class="com.junhojohn.core.models.UserVO">
		<property name="id" value="#{ client.id }"/>
		<property name="pwd" value="#{ client.pwd }"/>
		<property name="addr" value="#{ client.addr[1] }"/>
	</bean>
	
</beans>